{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","hasClock","clockName","time","window","setInterval","oldName","setState","console","debug","timeUpdate","info","toUTCString","timeUpdateInterval","addEventListener","e","preventDefault","clearInterval","className","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAGA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GASX,IAAMK,EAAb,4MACEC,MAAe,CACbC,UAAU,EACVC,UAAW,UACXC,KAAM,IAAIR,MAJd,uDAOE,WAAqB,IAAD,OAClBS,OAAOC,aAAY,WACjB,IAAMC,EAAU,EAAKN,MAAME,UAE3B,EAAKK,SAAS,CACZL,UAAWT,MAGT,EAAKO,MAAMC,UAEbO,QAAQC,MAAR,uBAA8BH,EAA9B,eAA4C,EAAKN,MAAME,cAExD,MAEH,IAAMQ,EAAa,WACjB,EAAKH,SAAS,CACZJ,KAAM,IAAIR,OAGR,EAAKK,MAAMC,UAEbO,QAAQG,KAAK,EAAKX,MAAMG,KAAKS,cAAcd,OAAO,IAAK,KAIrDe,EAAqBT,OAAOC,YAAYK,EAAY,KAE1DN,OAAOU,iBAAiB,eAAe,SAAAC,GACrCA,EAAEC,iBAEF,EAAKT,SAAS,CACZN,UAAU,OAIdG,OAAOU,iBAAiB,SAAS,WAC/B,EAAKP,SAAS,CACZN,UAAU,EACVE,KAAM,IAAIR,OAGZS,OAAOa,cAAcJ,GACrBT,OAAOC,YAAYK,EAAY,UAjDrC,oBAqDE,WACE,OACE,sBAAKQ,UAAU,MAAf,UACE,6CAECC,KAAKnB,MAAMC,SAER,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGC,KAAKnB,MAAME,YAGb,YAED,sBAAMgB,UAAU,cAAhB,SACGC,KAAKnB,MAAMG,KAAKS,cAAcd,OAAO,IAAK,QAI/C,YAxEZ,GAAyBsB,IAAMC,WCZ/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd388116.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean\n  clockName: string\n  time: Date\n}\n\nexport class App extends React.Component {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      const oldName = this.state.clockName;\n\n      this.setState({\n        clockName: getRandomName(),\n      });\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.debug(`Renamed from ${oldName} to ${this.state.clockName}`);\n      }\n    }, 3300);\n\n    const timeUpdate = () => {\n      this.setState({\n        time: new Date(),\n      });\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.time.toUTCString().slice(-12, -4));\n      }\n    };\n\n    const timeUpdateInterval = window.setInterval(timeUpdate, 1000);\n\n    window.addEventListener('contextmenu', e => {\n      e.preventDefault();\n\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    window.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n        time: new Date(),\n      });\n\n      window.clearInterval(timeUpdateInterval);\n      window.setInterval(timeUpdate, 1000);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock\n          ? (\n            <div className=\"Clock\">\n              <strong className=\"Clock__name\">\n                {this.state.clockName}\n              </strong>\n\n              {' time is '}\n\n              <span className=\"Clock__time\">\n                {this.state.time.toUTCString().slice(-12, -4)}\n              </span>\n            </div>\n          )\n          : null}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}